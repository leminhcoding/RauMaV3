import requests
import json
import os

# X√°c ƒë·ªãnh ƒë∆∞·ªùng d·∫´n JSON
BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
DATA_PATH = os.path.join(BASE_DIR, "resources", "product_texts.json")

# ƒê·ªçc file JSON
with open(DATA_PATH, "r", encoding="utf-8") as f:
    data = json.load(f)

# L·ªçc s·∫£n ph·∫©m c√≥ m√¥ t·∫£
products = [
    p for p in data
    if "M√¥ t·∫£ s·∫£n ph·∫©m" in p and isinstance(p["M√¥ t·∫£ s·∫£n ph·∫©m"], str) and p["M√¥ t·∫£ s·∫£n ph·∫©m"].strip()
]

# Chu·∫©n h√≥a key danh m·ª•c cho ch·∫Øc ch·∫Øn (n·∫øu c√≥ sai l·ªách vi·∫øt hoa/th∆∞·ªùng)
for p in products:
    if "Lo·∫°i s·∫£n ph·∫©m" not in p and "loai_san_pham" in p:
        p["Lo·∫°i s·∫£n ph·∫©m"] = p["loai_san_pham"]

# G√°n ID n·∫øu ch∆∞a c√≥
for i, p in enumerate(products):
    p["id"] = i + 1

print(f"‚úÖ T·ªïng s·ªë s·∫£n ph·∫©m g·ª≠i: {len(products)}")

# G·ª≠i l√™n Flask server
response = requests.post(
    "http://localhost:8000/add",
    json={"products": products}
)

try:
    print("üì® Response:", response.status_code)
    print("üîÅ N·ªôi dung:", response.json())
except Exception:
    print("‚ùå Kh√¥ng th·ªÉ parse JSON. N·ªôi dung raw:")
    print(response.text)
