from flask import Flask, request, jsonify
import chromadb
from chromadb.utils.embedding_functions import SentenceTransformerEmbeddingFunction

app = Flask(__name__)

# D√πng local ChromaDB client
client = chromadb.HttpClient(host="host.docker.internal", port=8001)

embedding_fn = SentenceTransformerEmbeddingFunction(
    model_name="VoVanPhuc/sup-SimCSE-VietNamese-phobert-base"
)
collection = client.get_or_create_collection(
    name="products", embedding_function=embedding_fn
)

@app.route("/embed", methods=["POST"])
def embed_and_search():
    data = request.json
    query = data["query"]

    # ‚úÖ Danh s√°ch danh m·ª•c c·ªë ƒë·ªãnh
    categories = ["T·ªß l·∫°nh", "M√°y gi·∫∑t", "Tivi", "ƒêi·ªÅu h√≤a"]

    # ‚úÖ T·ª± b·∫Øt danh m·ª•c t·ª´ query ng∆∞·ªùi d√πng
    matched_category = next((cat for cat in categories if cat.lower() in query.lower()), None)

    print("üìå Danh m·ª•c ƒë∆∞·ª£c ph√°t hi·ªán:", matched_category)

    # ‚úÖ Truy v·∫•n v·ªõi b·ªô l·ªçc n·∫øu c√≥
    if matched_category:
        results = collection.query(
            query_texts=[query],
            n_results=20,
            where={"Lo·∫°i s·∫£n ph·∫©m": matched_category}
        )
    else:
        results = collection.query(query_texts=[query], n_results=12)

    return jsonify(results)


@app.route("/add", methods=["POST"])
def add_products():
    data = request.json

    valid_products = [
        p for p in data["products"]
        if "M√¥ t·∫£ s·∫£n ph·∫©m" in p and isinstance(p["M√¥ t·∫£ s·∫£n ph·∫©m"], str) and p["M√¥ t·∫£ s·∫£n ph·∫©m"].strip()
    ]

    collection.add(
        documents=[p["M√¥ t·∫£ s·∫£n ph·∫©m"] for p in valid_products],
        metadatas=valid_products,
        ids=[str(p["id"]) for p in valid_products],
    )
    return jsonify({"status": "ok", "added": len(valid_products)})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)
